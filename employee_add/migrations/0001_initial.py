# Generated by Django 5.2 on 2025-04-20 15:17

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee_add',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('Date_of_Birth', models.DateField(blank=True, null=True)),
                ('Gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('Address', models.TextField()),
                ('Job_title', models.CharField(max_length=50)),
                ('Department', models.CharField(max_length=50)),
                ('Employee_type', models.CharField(choices=[('Full time', 'Full time'), ('Part time', 'Part time'), ('Contract', 'Contract'), ('Intern', 'Intern')], max_length=10)),
                ('Salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Date_hired', models.DateField()),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='employee_pics/')),
                ('resume', models.FileField(blank=True, null=True, upload_to='resume/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='post_job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=50)),
                ('job_department', models.CharField(max_length=50)),
                ('job_position', models.CharField(max_length=50)),
                ('job_experience', models.CharField(max_length=50)),
                ('job_type', models.CharField(max_length=10)),
                ('job_education', models.CharField(max_length=50)),
                ('job_skills', models.CharField(max_length=50)),
                ('job_description', models.CharField(max_length=1000)),
                ('job_location', models.CharField(max_length=50)),
                ('job_min_salary', models.CharField(max_length=50)),
                ('job_max_salary', models.CharField(max_length=50)),
                ('job_status', models.CharField(max_length=10)),
                ('job_created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=200, unique=True)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee_attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateField()),
                ('attendance_status', models.CharField(choices=[('Present', 'Present'), ('Absent', 'Absent'), ('Leave', 'Leave')], max_length=10)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_add.employee_add')),
            ],
        ),
        migrations.CreateModel(
            name='Employee_leave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_date', models.DateField()),
                ('leave_type', models.CharField(choices=[('Annual', 'Annual'), ('Medical', 'Medical'), ('Other', 'Other')], max_length=10)),
                ('leave_status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], max_length=10)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_add.employee_add')),
            ],
        ),
        migrations.CreateModel(
            name='Employee_performance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performance_date', models.DateField()),
                ('performance_rating', models.CharField(choices=[('Excellent', 'Excellent'), ('Good', 'Good'), ('Average', 'Average')], max_length=10)),
                ('performance_feedback', models.TextField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_add.employee_add')),
            ],
        ),
        migrations.CreateModel(
            name='Employee_salary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary_date', models.DateField()),
                ('salary_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('salary_status', models.CharField(choices=[('Paid', 'Paid'), ('Unpaid', 'Unpaid')], max_length=10)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_add.employee_add')),
            ],
        ),
        migrations.CreateModel(
            name='Employee_training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_date', models.DateField()),
                ('training_type', models.CharField(choices=[('Technical', 'Technical'), ('Soft skills', 'Soft skills'), ('Other', 'Other')], max_length=20)),
                ('training_feedback', models.TextField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_add.employee_add')),
            ],
        ),
        migrations.CreateModel(
            name='job_application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_date', models.DateField(auto_now_add=True)),
                ('application_status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], max_length=10)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_add.employee_add')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_add.post_job')),
            ],
        ),
        migrations.CreateModel(
            name='job_interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interview_date', models.DateField()),
                ('interview_time', models.TimeField()),
                ('interview_location', models.CharField(max_length=50)),
                ('interview_feedback', models.TextField()),
                ('interview_result', models.CharField(choices=[('Selected', 'Selected'), ('Rejected', 'Rejected'), ('On hold', 'On hold')], max_length=10)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_add.job_application')),
            ],
        ),
    ]
